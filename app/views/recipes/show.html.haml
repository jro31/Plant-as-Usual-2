.container
  .row
    .col-12.text-center
      = cl_image_tag @recipe.photo, class: 'recipe-index-photo'
  .row
    .col-12.text-center
      %h1#name-display.input-display
      = simple_form_for @recipe do |f|
        = f.input :name, disabled: true, label: false, input_html: { id: 'name-input', class: 'input-edit d-none text-center' }
  .row
    .col-8
      / If not the user's recipe, do not add #process-display. Make sure that pundit works for this. Also spec that the classes only exist when the user is the current user.
      #process-display.input-display
      = simple_form_for @recipe do |f|
        = f.input :process, disabled: true, label: false, input_html: { id: 'process-input', class: 'input-edit d-none' }
    .col-4
      - @ingredients.each_with_index do |ingredient, index|
        %p.input-display{ id: "ingredient-#{index + 1}-display" }
          %span{ id: "ingredient-#{index + 1}-amount-display" }
            = ingredient.amount || ingredient.amount_description
          %span{ id: "ingredient-#{index + 1}-unit-display" }
            = ingredient&.unit&.name
          %span{ id: "ingredient-#{index + 1}-name-display" }
            = ingredient.name.humanize
          %span{ id: "ingredient-#{index + 1}-preparation-display" }
            = "(#{ingredient.preparation})"
        = simple_form_for [@recipe, ingredient] do |f|
          .d-none{ id: "ingredient-#{index + 1}-input" }
            = f.input :amount, disabled: :true, label: false, input_html: { id: "ingredient-#{index + 1}-amount-input", class: 'input-edit' }
            = f.input :unit, disabled: :true, label: false, input_html: { id: "ingredient-#{index + 1}-unit-input", class: 'input-edit' }
            = f.input :name, disabled: :true, label: false, input_html: { id: "ingredient-#{index + 1}-name-input", class: 'input-edit' }
            = f.input :preparation, disabled: :true, label: false, input_html: { id: "ingredient-#{index + 1}-preparation-input", class: 'input-edit' }



:javascript
  const inputIdPrefixes = ['name', 'process']

  let ingredientElementPrefixes = []
  for (let i = 1; i < "#{@ingredients.count}"; i++) {
    inputIdPrefixes.push(`ingredient-${i}`)
    ingredientElementPrefixes.push(`ingredient-${i}-amount`)
    ingredientElementPrefixes.push(`ingredient-${i}-unit`)
    ingredientElementPrefixes.push(`ingredient-${i}-name`)
    ingredientElementPrefixes.push(`ingredient-${i}-preparation`)
  }


