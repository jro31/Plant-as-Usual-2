:javascript
  let inputIdPrefixes = []

= render 'shared/hidden_flash', text: ''

.container#recipe-show-page

  .position-fixed.d-flex.flex-md-column.justify-content-around{ class: component_classes(DarkMode::CLASSES[:interaction_icons]) }
    - if current_user
      .cursor-pointer
        %i.fas.fa-heart.interaction-icon#full-heart{ class: @recipe_is_favourite ? '' : 'd-none' }
        %i.far.fa-heart.interaction-icon#empty-heart{ class: @recipe_is_favourite ? 'd-none' : '' }
    = link_to recipes_path(recipe_filter: 'user_recipes', user_id: @recipe.user.id), class: current_user ? 'non-initial-icon' : '' do
      %i.far.fa-user.interaction-icon
    .non-initial-icon.d-flex.flex-column.flex-md-row
      %i.far.fa-share-square.interaction-icon.cursor-pointer#empty-share-square
      %i.fas.fa-share-square.interaction-icon.d-none#full-share-square
      #social-media-icons-container.d-none.flex-column.flex-md-row
        -# See https://sharingbuttons.io/ for below social media links
        %div
          -# This one needs testing once online
          = link_to "https://facebook.com/sharer/sharer.php?u=#{request.original_url}", target: "_blank", 'aria-label' => "Share on Facebook" do
            %i.fab.fa-facebook-square.social-media-icon
        %div
          = link_to "https://twitter.com/intent/tweet/?text=#{@recipe.name}%20on%20Plant%20as%20Usual.%20#{request.original_url}%0a%0a%23vegan%20%23plantbased%20%23plantasusual", target: "_blank", 'aria-label' => "Share on Twitter" do
            %i.fab.fa-twitter.social-media-icon
        %div
          -# Needs testing
          = link_to "whatsapp://send?text=#{@recipe.name}%20#{request.original_url}", target: "_blank", 'aria-label' => "Share on WhatsApp" do
            %i.fab.fa-whatsapp.social-media-icon
        %div
          %i.fas.fa-link.cursor-pointer#copy-link-icon.social-media-icon
    - if @user_can_edit
      = link_to recipe_path(@recipe), method: :delete, data: {confirm: 'This will permanently delete this recipe. Are you sure?'}, class: 'non-initial-icon', id: 'delete-recipe-link' do
        %i.far.fa-trash-alt.interaction-icon

  .row
    .col-12.text-center
      = simple_form_for @recipe, url: upload_photo_recipe_url, remote: true, html: { id: nil } do |f|
        = f.file_field :photo, id: 'photo-uploader', class: 'd-none'
        = f.submit id: 'submit-photo', class: 'd-none'

  .row.justify-content-center{ class: component_classes(DarkMode::CLASSES[:photo_uploader]) }
    #spinner.spinner-grow.text-warning.position-absolute.d-none{ style: 'z-index: 100' }

    #photo-container.col-12.text-center
      - if @recipe.photo.file&.exists?
        = image_tag @recipe.photo.url, class: "recipe-photo #{@user_can_edit ? 'cursor-pointer' : ''}"
      - else
        - if @user_can_edit
          #photo-placeholder-container.d-flex.justify-content-center.align-items-center
            #photo-placeholder.cursor-pointer.d-flex.justify-content-center.align-items-center
              Add photo


      // REMEMBER THAT WHEN IT COMES TO DISPLAYING RECIPE PHOTOS OF DIFFERENT SIZES SEE LINE 32 'THUMB' OF /Users/jethrowilliams/Google Drive/code/Plant-as-Usual-2/app/uploaders/photo_uploader.rb
      // WHICH CAN THEN BE DISPLAYED AS, FOR EXAMPLE, image_tag photo.image.thumb

  .row
    .col-12.text-center
      %h1#name-display.input-display{ class: @user_can_edit ? component_classes(DarkMode::CLASSES[:can_edit_input_display]) : '' }
      = simple_form_for @recipe, remote: true, html: { id: nil } do |f|
        -# This doesn't wrap when multiple lines (like on mobile). Perhaps update to text area rather than input.
        = f.input :name, label: false, placeholder: @name_placeholder, input_html: { id: 'name-input', class: "d-none text-center #{component_classes(DarkMode::CLASSES[:input_edit])}" }
  .row{ class: component_classes(DarkMode::CLASSES[:recipe_content_row]) }
    .col-md-5.col-lg-4
      #ingredients-container
        %h4
          Ingredients
        - @ingredients.each do |ingredient|
          = render 'ingredient', ingredient: ingredient, show_input: false
          :javascript
            inputIdPrefixes.push(`ingredient-${#{ingredient.id}}`)
      - if @user_can_edit
        #add-ingredient-container
          = link_to 'Add ingredient', recipe_ingredients_path(@recipe), method: :post, remote: true, id: 'add-ingredient'
        #add-ingredient-container-disabled.d-none
          Add ingredient
    .col-md-7.col-lg-8.order-md-first.mt-5.mt-md-0
      // If not the user's recipe, do not add #process-display. Make sure that pundit works for this. Also spec that the classes only exist when the user is the current user.
      #process-display.input-display{ class: @user_can_edit ? component_classes(DarkMode::CLASSES[:can_edit_input_display]) : '' }
      // Perhaps add a safeguard where the recipe saves after every (100?) characters typed
      = simple_form_for @recipe, remote: true, html: { id: nil } do |f|
        = f.input :process, label: false, placeholder: @process_placeholder, input_html: { id: 'process-input', class: "d-none #{component_classes(DarkMode::CLASSES[:input_edit])}" }

- if @user_can_edit
  = link_to 'Click here to submit your changes', mark_as_complete_recipe_path(@recipe), method: :patch, class: "btn fixed-bottom-left #{@recipe.incomplete? ? '' : 'd-none'} #{component_classes(DarkMode::CLASSES[:btn_keen])}", id: 'mark-as-complete-button'

%input#url-dummy-input{ value: request.original_url }

:javascript
  inputIdPrefixes.push('name', 'process')
  const isRecipeShow = #{current_page?(controller: 'recipes', action: 'show')}
  const userCanEdit = #{@user_can_edit}
  const placeholders = {name: `#{@name_placeholder}`, process: `#{@process_placeholder}`}
  const ingredientColumns = #{raw Ingredient.ordered_editable_column_values}
  const ingredientDisplayRows = #{raw Ingredient.ordered_display_rows}
  const unitsHumanized = JSON.parse('#{raw(Ingredient.units_humanized.to_json)}')
  const unitsPluralized = JSON.parse('#{raw(Ingredient.units_pluralized.to_json)}')
  const singularUnitAmounts = #{raw Ingredient::SINGULAR_UNIT_AMOUNTS}
  let recipeHasBeenEdited = #{@recipe.incomplete?}
